import { apiSlice } from "./api/apiSlice";

// –†–∞—Å—à–∏—Ä—è–µ–º –±–∞–∑–æ–≤—ã–π API –¥–ª—è –ø–æ—Å—Ç–æ–≤
export const postsApi = apiSlice.injectEndpoints({
  endpoints: (builder) => ({
    // üëá –ó–∞–ø—Ä–æ—Å –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤
    getPosts: builder.query({
      query: () => "/posts", // üëà URL: /posts
    }),
    // üëá –ó–∞–ø—Ä–æ—Å –æ–¥–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ –ø–æ ID
    getPostById: builder.query({
      query: (id) => `/posts/${id}`,
    }),
    // üëá –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞
    createPost: builder.mutation({
      query: (newPost) => ({
        url: "/posts",
        method: "POST",
        body: newPost,
      }),
    }),
    // üëá –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞
    deletePost: builder.mutation({
      query: (id) => ({
        url: `/posts/${id}`,
        method: "DELETE",
      }),
    }),
  }),
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ö—É–∫–∏ üëá
export const {
  useGetPostsQuery,
  useGetPostByIdQuery,
  useCreatePostMutation,
  useDeletePostMutation,
} = postsApi;
